{
  // we cant upgrade to eslint 9.0 until next.js supports it, but eventually this file should be changed to eslint.config.js
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "next", // Includes Next.js rules, I think also includes recommended rules for react
    "next/core-web-vitals", // Includes rules for Next Core Web Vitals
    "prettier", // Disables conflicting rules to make ESLint work with Prettier
    "plugin:unicorn/recommended", // Add recommended javascript rules
    "plugin:@tanstack/query/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.eslint.json"
  },
  "ignorePatterns": [
    "**/*.js", // Ignore all .js files in the project
    "prettier.config.js",
    "jest.config.js",
    "next.config.js",
    "tailwind.config.js",
    "postcss.config.js",
    "svgr.config.js",
    "@tanstack/query"
  ],
  "plugins": ["@typescript-eslint", "react"],
  "rules": {
    "no-console": ["error", { "allow": ["warn", "error", "info"] }],
    "eqeqeq": ["error", "smart"],
    "curly": "error",
    "no-fallthrough": "error",
    "require-await": "off", // duplicate with ts lint rule
    "import/no-anonymous-default-export": "error",
    "@next/next/no-img-element": "off", // if we continue to use next, we could could consider turning this on?
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/ban-ts-comment": "off", //allows @ts-ignore for now, will want to turn off if @ts-ignore becomes commonly used
    "@typescript-eslint/no-unused-vars": ["off", { "argsIgnorePattern": "^_" }], // turning off unused variables as it clutters lint output too much
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "as",
        "objectLiteralTypeAssertions": "allow-as-parameter"
      }
    ],
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "react-hooks/exhaustive-deps": "error",
    "unicorn/no-null": "off",
    "unicorn/filename-case": "off",
    "unicorn/prevent-abbreviations": "off",
    "unicorn/no-nested-ternary": "off",
    "unicorn/no-abusive-eslint-disable": "warn"
  }
}
